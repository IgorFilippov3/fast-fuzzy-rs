const fs = require("fs");
const path = require("path");

const nodeFiles = fs.readdirSync(".").filter((file) => file.endsWith(".node"));

if (nodeFiles.length === 0) {
  console.error("No .node files found!");
  process.exit(1);
}

const nodeFile = nodeFiles[0];
console.log(`Found .node file: ${nodeFile}`);

const indexContent = `/* tslint:disable */
/* eslint-disable */
/* prettier-ignore */

/* auto-generated by NAPI-RS */

const { existsSync, readFileSync } = require('fs')
const { join } = require('path')

const { platform, arch } = process

let nativeBinding = null
let localFileExisted = false
let loadError = null

function isMusl() {
  // For Node 10
  if (!process.report || typeof process.report.getReport !== 'function') {
    try {
      const lddPath = require('child_process').execSync('which ldd').toString().trim()
      return readFileSync(lddPath, 'utf8').includes('musl')
    } catch (e) {
      return true
    }
  } else {
    const { glibcVersionRuntime } = process.report.getReport().header
    return !glibcVersionRuntime
  }
}

try {
  nativeBinding = require('./${nodeFile}')
} catch (e) {
  loadError = e
}

if (!nativeBinding) {
  if (loadError) {
    throw loadError
  }
  throw new Error(\`Failed to load native binding\`)
}

const { search, fuzzy } = nativeBinding

module.exports.search = search
module.exports.fuzzy = fuzzy
`;

fs.writeFileSync("index.js", indexContent);
console.log("Generated index.js successfully");

const dtsContent = `/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface SearchOptions {
  limit?: number;
  threshold?: number;
  normalize?: boolean;
  ignoreCase?: boolean;
}

export interface SearchResult {
  item: string;
  score: number;
  index: number;
}

export function search(
  query: string,
  items: Array<string>,
  options?: SearchOptions | undefined | null
): Array<SearchResult>;

export function fuzzy(
  str1: string,
  str2: string,
  normalize?: boolean | undefined | null
): number;
`;

fs.writeFileSync("index.d.ts", dtsContent);
console.log("Generated index.d.ts successfully");
